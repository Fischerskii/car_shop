package ru.ylab.carshopapp.repository;

import ru.ylab.carshopapp.entity.Car;
import ru.ylab.carshopapp.exception.DataAccessException;

import java.util.List;
import java.util.Optional;

/**
 * Implementation of the {@link CarRepository} interface for performing CRUD operations on {@link Car} entities.
 * This class interacts with a PostgreSQL database to manage car data.
 */
public interface CarRepository {

    /**
     * Saves a new car to the database. The car's VIN number is generated by the database and
     * returned to the car entity. If an error occurs during the operation, the transaction is rolled back.
     *
     * @param car the car entity to be saved
     * @return the saved car entity with the generated VIN number
     * @throws DataAccessException if there is an error accessing the database
     */
    Car save(Car car);

    /**
     * Updates an existing car in the database. If no car with the given VIN is found, a warning is logged.
     * If an error occurs during the operation, the transaction is rolled back.
     *
     * @param car the car entity with updated information
     * @throws DataAccessException if there is an error accessing the database
     */
    void edit(Car car);

    /**
     * Deletes a car from the database by its VIN number. If an error occurs during the operation,
     * the transaction is rolled back.
     *
     * @param vinNumber the VIN number of the car to be deleted
     * @throws DataAccessException if there is an error accessing the database
     */
    void delete(String vinNumber);

    /**
     * Retrieves a list of all cars from the database.
     *
     * @return a list of all cars
     */
    List<Car> findAll();

    /**
     * Retrieves a car from the database by its VIN number.
     *
     * @param vinNumber the VIN number of the car to be retrieved
     * @return an {@link Optional} containing the car if found, or an empty {@link Optional} if not
     */
    Optional<Car> findByVin(String vinNumber);
}
